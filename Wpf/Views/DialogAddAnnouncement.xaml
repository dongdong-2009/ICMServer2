<Window x:Class="ICMServer.WPF.Views.DialogAddAnnouncement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ICMServer.WPF"
        xmlns:vm="clr-namespace:ICMServer.WPF.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:model="clr-namespace:ICMServer.Models;assembly=ICMServer.Models"
        xmlns:converter="clr-namespace:ICMServer.WPF.Converter"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:AnnouncementViewModel, IsDesignTimeCreatable=True}"
        WindowStartupLocation="CenterScreen" SizeToContent="WidthAndHeight" ResizeMode="NoResize" 
        WindowStyle="SingleBorderWindow" Loaded="Window_Loaded" FontSize="14">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <local:DesignTimeResourceDictionary x:Name="lanaguageResource" DesignTimeSource="pack://application:,,,/Wpf;component/Cultures/StringResource.xaml"/>
                <ResourceDictionary Source="InputFormResource.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:CulturesHelper x:Key="CulturesHelperDataSource" d:IsDataSource="True"/>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />

            <!-- Converter -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converter:DeviceAddressConverter x:Key="DeviceAddressConverter"/>
            <converter:MessageTypeToRadioButtonConverter x:Key="MessageTypeConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Title>
        <DynamicResource ResourceKey="AddAnnouncement"/>
    </Window.Title>

    <DockPanel LastChildFill="True">
        <GroupBox Header="{DynamicResource AnnouncementProperties}" DockPanel.Dock="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Label Style="{StaticResource PropertyName}" Content="{DynamicResource DestinationAddress}"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBox IsReadOnly="True" MinWidth="180" Text="{Binding DstRoomAddress, Converter={StaticResource DeviceAddressConverter}, ConverterParameter=AllDevices}"/>
                    <Button Content="..." Margin="0" Padding="10,0,10,0"  Width="Auto" MinWidth="0" Command="{Binding PickDstRoomAddressCommand, Mode=OneWay}"/>
                </StackPanel>
                <Label Style="{StaticResource PropertyName}" Grid.Column="2" Content="{DynamicResource AnnouncementTitle}"/>
                <TextBox Grid.Column="3" Text="{Binding Title, UpdateSourceTrigger=PropertyChanged, Delay=500}" MinWidth="250"/>

                <StackPanel Grid.Row="1" Grid.ColumnSpan="4" Orientation="Horizontal">
                    <RadioButton Content="{DynamicResource Text}" x:Name="TextContentType" IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource MessageTypeConverter}, ConverterParameter=Text}"/>
                    <RadioButton Content="{DynamicResource Image}" x:Name="ImageContentType" IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource MessageTypeConverter}, ConverterParameter=Image}"/>
                </StackPanel>
            </Grid>
        </GroupBox>

        <StackPanel DockPanel.Dock="Bottom">
            <Grid Visibility="{Binding AddCommand.Execution, Converter={StaticResource NullToVisibilityConverter}}">
                <Label Visibility="{Binding AddCommand.Execution.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" 
                       Content="{DynamicResource Saving}" ContentStringFormat="{}{0}..."/>

                <!--Completed-->
                <Label Visibility="{Binding AddCommand.Execution.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}}" 
                       Content="{DynamicResource SuccessfullySaved}" ContentStringFormat="{}{0}..."/>

                <!--Canceled-->
                <Label Visibility="{Binding AddCommand.Execution.IsCanceled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                       Content="{DynamicResource Canceled}" ContentStringFormat="{}{0}..."/>

                <!--Error details-->
                <Label Visibility="{Binding AddCommand.Execution.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="Red" 
                       Content="{Binding AddCommand.Execution.ErrorMessage}" />
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" DockPanel.Dock="Bottom">
                <Button Content="{DynamicResource Publish}" Command="{Binding AddCommand, Mode=OneWay}"/>
                <Button Content="{DynamicResource Close}" Click="ButtonClose_Click"/>
            </StackPanel>
        </StackPanel>

        <GroupBox Header="{DynamicResource AnnouncementBody}">
            <StackPanel>
                <Button Content="{DynamicResource SetFont}" HorizontalAlignment="Left" Margin="5" Click="ButtonSetFont_Click"
                        Visibility="{Binding IsChecked, ElementName=TextContentType, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <StackPanel Margin="5" Orientation="Horizontal" Visibility="{Binding IsChecked, ElementName=ImageContentType, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label Content="{DynamicResource ImagePath}"/>
                    <DockPanel>
                        <Button DockPanel.Dock="Right" Content="..." Margin="0" Padding="10,0,10,0"  Width="Auto" MinWidth="0" Command="{Binding PickImageFileCommand, Mode=OneWay}"/>
                        <TextBox IsReadOnly="True" MinWidth="250" Text="{Binding ImageFilePath, Mode=OneWay}" />
                    </DockPanel>
                </StackPanel>

                <Image x:Name="imageContent"  Width="854" Height="314" Visibility="{Binding IsChecked, ElementName=ImageContentType, Converter={StaticResource BooleanToVisibilityConverter}}" Source="{Binding ImageFilePath, Mode=OneWay}" StretchDirection="DownOnly"/>
                <TextBox x:Name="textContent" Width="{Binding TextContentWidth}" Height="{Binding TextContentHeight}" FontSize="9" TextWrapping="Wrap" AcceptsReturn="True" 
                         Visibility="{Binding IsChecked, ElementName=TextContentType, Converter={StaticResource BooleanToVisibilityConverter}}" Text="{Binding TextContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
            </StackPanel>
        </GroupBox>
    </DockPanel>
</Window>
